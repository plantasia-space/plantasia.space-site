function getCachedData(key){const cachedData=lscache.get(key);return cachedData?(console.log(`Cache hit for "${key}"`),cachedData):(console.log(`Cache miss for "${key}"`),null)}function setCachedData(key,data,expirationMinutes){lscache.set(key,data,expirationMinutes),console.log(`Data cached under key "${key}" for ${expirationMinutes} minutes.`)}function clearCachedData(key){lscache.remove(key),console.log(`Cache cleared for key "${key}".`)}async function fetchDataWithCache(url,cacheKey,cacheDurationMinutes=5,forceRefresh=!1){if(!forceRefresh){const cachedData=getCachedData(cacheKey);if(cachedData)return cachedData}try{const response=await fetch(url);if(!response.ok)throw new Error(`HTTP error! Status: ${response.status}`);const data=await response.json();return setCachedData(cacheKey,data,cacheDurationMinutes),data}catch(error){throw console.error(`Error fetching data from "${url}":`,error),error}}function clearUserCaches(userId){[`profile_${userId}`,`soundEngines_batch_${userId}`,`interplanetaryPlayers_batch_${userId}`,`tracks_batch_${userId}`].forEach((key=>clearCachedData(key))),console.log(`All caches cleared for user "${userId}".`)}